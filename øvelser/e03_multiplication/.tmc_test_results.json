[{"name": "test.test_multiplication.Multiplication.test_content", "status": "failed", "message": "False is not true", "passed": false, "points": ["p01-03.1"], "backtrace": ["  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 57, in testPartExecutor\n    yield\n", "  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 623, in run\n    self._callTestMethod(testMethod)\n", "  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 579, in _callTestMethod\n    if method() is not None:\n       ^^^^^^^^\n", "  File \"C:\\Program Files\\Python Project\\P1\\PythonData-1\\øvelser\\e03_multiplication\\test\\test_multiplication.py\", line 30, in test_content\n    self.assertTrue(line.startswith(\"4 multiplied by %i is\" % i))\n"]}, {"name": "test.test_multiplication.Multiplication.test_lines", "status": "failed", "message": "1 != 11 : The output must contain 11 lines", "passed": false, "points": ["p01-03.1"], "backtrace": ["  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 57, in testPartExecutor\n    yield\n", "  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 623, in run\n    self._callTestMethod(testMethod)\n", "  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 579, in _callTestMethod\n    if method() is not None:\n       ^^^^^^^^\n", "  File \"C:\\Program Files\\Python Project\\P1\\PythonData-1\\øvelser\\e03_multiplication\\test\\test_multiplication.py\", line 23, in test_lines\n    self.assertEqual(len(lines), 11, msg=\"The output must contain 11 lines\")\n"]}]