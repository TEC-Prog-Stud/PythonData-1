[{"name": "test.test_acronyms.Acronyms.test_empty", "status": "passed", "message": "", "passed": true, "points": ["p01-18.1"], "backtrace": []}, {"name": "test.test_acronyms.Acronyms.test_first", "status": "failed", "message": "Lists differ: ['EU', '(GDPR),', '(IBM', 'IBM', '(EEA))', 'EEA,', 'IBM', 'PO'] != ['EU', 'GDPR', 'IBM', 'IBM', 'EEA', 'EEA', 'IBM', 'PO', 'PO6', '3AU']\n\nFirst differing element 1:\n'(GDPR),'\n'GDPR'\n\nSecond list contains 2 additional elements.\nFirst extra element 8:\n'PO6'\n\n- ['EU', '(GDPR),', '(IBM', 'IBM', '(EEA))', 'EEA,', 'IBM', 'PO']\n+ ['EU', 'GDPR', 'IBM', 'IBM', 'EEA', 'EEA', 'IBM', 'PO', 'PO6', '3AU']", "passed": false, "points": ["p01-18.1"], "backtrace": ["  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 57, in testPartExecutor\n    yield\n", "  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 623, in run\n    self._callTestMethod(testMethod)\n", "  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 579, in _callTestMethod\n    if method() is not None:\n       ^^^^^^^^\n", "  File \"C:\\Program Files\\Python Project\\P1\\PythonData-1\\Ã¸velser\\e18_acronyms\\test\\test_acronyms.py\", line 20, in test_first\n    self.assertEqual(result, ['EU', 'GDPR', 'IBM', 'IBM', 'EEA', 'EEA', 'IBM', 'PO', 'PO6', '3AU'])\n"]}]